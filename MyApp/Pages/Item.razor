@page "/item"

<h1>Item (@items.Count(item => item.IsEnabled))</h1>

<ul>
    @foreach (var item in items)
    {
        <li>
            <input type="checkbox" @bind="item.IsEnabled" />
            <span>@item.Title</span>
            <span>@item.Content</span>
        </li>
    }
</ul>

<input placeholder="title" @bind="newTitle" />
<input placeholder="content" @bind="newContent" />
<input placeholder="is_enabled" type="checkbox" @bind="newIsEnabled" />
<button @onclick="AddItem">Add item</button>

@using Newtonsoft.Json
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@code {
    private IList<IItem> items = new List<IItem>();
    private string newTitle;
    private string newContent;
    private bool newIsEnabled = true;

    protected override async Task OnInitializedAsync()
    {
        string jsonString = await localStorage.GetItemAsync<string>("items");
        items = JsonConvert.DeserializeObject<List<IItem>>(jsonString);
    }

    private async Task AddItem()
    {
        if (!string.IsNullOrWhiteSpace(newTitle))
        {
            items.Add(new IItem { Title = newTitle, Content = newContent, IsEnabled = newIsEnabled });
            newTitle = string.Empty;
            newContent = string.Empty;
            newIsEnabled = true;

            string jsonString = JsonConvert.SerializeObject(items);
            await localStorage.SetItemAsync("items", jsonString);
        }
    }
}